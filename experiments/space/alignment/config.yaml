seml:
    executable: spatial_alignment/experiment.py
    name: spatial_alignment
    output_dir: spatial_alignment/logs
    project_root_dir: ..

slurm:
    experiments_per_job: 1
    max_simultaneous_jobs: 20
    sbatch_options_template: CPU
    sbatch_options:
        # gres: gpu:1       # num GPUs
        # mem: 90G # memory
        cpus-per-task: 6 # num cores
        time: 23:00 # max time, D-HH:MM
        constraint: xeon_6126|opteron_6234|opteron_6376|opteron_6378
    # exclude: supergpu[05,07-08],supergpu06,icb-gpusrv[01-02],icb-gpusrv[04-05]

###### BEGIN PARAMETER CONFIGURATION ######
fixed:
    train:
        training.output: /home/icb/giovanni.palla/workspace/moscot/res
        training.reference_key: reference
    data:
        dataset.adata: /home/icb/giovanni.palla/workspace/moscot/dat/alignment.h5ad

grid:
    data:
        dataset.batch:
            type: choice
            options: [1, 2, 3, 4]
        dataset.fraction:
            type: choice
            options: [0.5, 0.7, 0.9, 1]

moscot:
    fixed:
        model:
            tool.type: moscot
    grid:
        model:
            solver.alpha:
                type: choice
                options: [0.1, 0.5, 0.9]
            solver.epsilon:
                type: choice
                options: [1e-3, 1e-2, 1e-1]
            solver.rank:
                type: choice
                options: [-1, 100]

gpsa:
    fixed:
        model:
            tool.type: gpsa
    grid:
        model:
            solver.kernel:
                type: choice
                options: [MATERN, RBF]
            solver.lr:
                type: choice
                options: [1e-2, 5e-3, 1e-3]
            solver.n_epochs:
                type: choice
                options: [5000, 1000, 2000]

random:
    samples: 3
    seed: 42
    data.dataset.seeds:
        type: randint
        min: 224
        max: 442
